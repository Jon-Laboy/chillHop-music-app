{"version":3,"sources":["components/Song.js","components/PlayerControls.js","components/LibrarySong.js","components/Library.js","components/Nav.js","data.js","App.js","index.js"],"names":["Song","currentSong","songInfo","isPlaying","songAnimation","transform","currentTime","className","alt","name","style","src","cover","artist","PlayerControls","songs","setSongInfo","audioRef","setCurrentSong","setIsPlaying","setShuffleState","shuffleState","loopState","setLoopState","animationPercentage","duration","formatTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","song","id","length","current","play","background","color","type","min","max","value","onChange","e","target","onClick","icon","faAngleLeft","size","pause","faPauseCircle","faPlayCircle","faAngleRight","faRandom","margin","cursor","faUndoAlt","LibrarySong","handleSongSelect","Library","setSongs","libraryStatus","map","Nav","setLibraryStatus","faMusic","chillHop","audio","uuidv4","active","App","useRef","useState","data","handleTimeUpdate","handleSongEnd","random","onTimeUpdate","onLoadedMetadata","ref","onEnded","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.55fe02da.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Song = ({currentSong, isPlaying, songInfo}) => {\r\n    \r\n    const songAnimation = {\r\n        transform: `rotate(${songInfo.currentTime * 10}deg)`,\r\n    };\r\n\r\n    return (\r\n        <div className=\"song-container\">\r\n            <img\r\n            alt={currentSong.name} \r\n            style={songAnimation}\r\n            src= {currentSong.cover}\r\n            />\r\n             <h2>{currentSong.name}</h2>\r\n            <h3>{currentSong.artist}</h3>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Song\r\n","import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlayCircle,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faPauseCircle,\r\n  faRandom,\r\n  faUndoAlt\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst PlayerControls = ({\r\n  songs,\r\n  songInfo,\r\n  setSongInfo,\r\n  audioRef,\r\n  currentSong,\r\n  setCurrentSong,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  setShuffleState,\r\n  shuffleState,\r\n  loopState,\r\n  setLoopState\r\n}) => {\r\n  const animationPercentage = (songInfo.currentTime / songInfo.duration) * 100;\r\n\r\n  const handlePlayPause = () => {\r\n    // if playing then onClick set audio to pause onClick. if paused then set to play. setIsPlaying state to the opposite of what it currently is\r\n    isPlaying ? audioRef.current.pause() : audioRef.current.play();\r\n    setIsPlaying(!isPlaying);\r\n  };\r\n\r\n  const formatTime = (time) => {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  };\r\n  //drag the range bar to different parts of song\r\n  const dragHandler = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n  };\r\n\r\n  const skipTrackHandler = async (direction) => {\r\n    const currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    if (direction === \"skip-forward\") {\r\n      //setcurrent song to the index + 1 for next song then use % to go back to index of 0 when reach last index\r\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n    }\r\n    if (direction === \"skip-back\") {\r\n      //once on index of 0 (first song) and - 1 again that will equal -1 if so..then set the current song to the songs with the index of songs.length -1 which gives the highest index in array\r\n      if ((currentIndex - 1) % songs.length === -1) {\r\n        await setCurrentSong(songs[songs.length - 1]);\r\n        return;\r\n      }\r\n      await setCurrentSong(songs[currentIndex - 1]);\r\n    }\r\n    if (isPlaying) audioRef.current.play();\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"player-container\">\r\n      <div className=\"time-control\">\r\n        <p>{formatTime(songInfo.currentTime)}</p>\r\n        <div\r\n          style={{\r\n            background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`,\r\n          }}\r\n          className=\"track\"\r\n        >\r\n          <input\r\n            type=\"range\"\r\n            min={0}\r\n            max={songInfo.duration}\r\n            value={songInfo.currentTime || \"\"}\r\n            onChange={dragHandler}\r\n          />\r\n          <div\r\n            style={{ transform: `translateX(${animationPercentage}%)` }}\r\n            className=\"animate-track\"\r\n          ></div>\r\n        </div>\r\n        <p>{formatTime(songInfo.duration || 0)}</p>\r\n      </div>\r\n      <div className=\"play-control\">\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler(\"skip-back\")}\r\n          icon={faAngleLeft}\r\n          size=\"3x\"\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={handlePlayPause}\r\n          className=\"play\"\r\n          icon={isPlaying ? faPauseCircle : faPlayCircle}\r\n          size=\"3x\"\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler(\"skip-forward\")}\r\n          icon={faAngleRight}\r\n          size=\"3x\"\r\n        />\r\n      </div>\r\n      <div className=\"shuffle-row\">\r\n        <FontAwesomeIcon\r\n          onClick={()=> setShuffleState(!shuffleState)}\r\n          icon={faRandom}\r\n          size=\"2x\"\r\n          style={{margin:\"0rem 3rem 1rem 3rem\", cursor:\"pointer\",color: shuffleState ? \"rgb(218, 92, 92)\" : \"white\"}}\r\n        />\r\n       <FontAwesomeIcon \r\n        onClick={()=> setLoopState(!loopState)}\r\n        icon={faUndoAlt} \r\n        size=\"2x\"\r\n        style={{margin:\"0rem 3rem 1rem 3rem\", cursor:\"pointer\",color: loopState ? \"rgb(218, 92, 92)\" : \"white\"}}        />\r\n       </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayerControls;\r\n","import React from 'react';\r\n\r\nconst LibrarySong = ({ isPlaying, audioRef, currentSong, setCurrentSong, song }) => {\r\n\r\n    const handleSongSelect = async () => {\r\n        await setCurrentSong(song)\r\n        if (isPlaying) audioRef.current.play();\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={`library-song  ${song.id === currentSong.id ? 'selected' : ''}`}\r\n            onClick={handleSongSelect}>\r\n            <img src={song.cover} />\r\n            <div className=\"song-description\">\r\n                <h3>{song.name}</h3>\r\n                <h4>{song.artist}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LibrarySong\r\n","import React from 'react'\r\nimport LibrarySong from './LibrarySong'\r\nconst Library = ({ audioRef, songs, setSongs, setCurrentSong, currentSong, isPlaying, libraryStatus }) => {\r\n    return (\r\n\r\n        <div className={`library ${libraryStatus ? 'active-library': ''} `}>\r\n            <h2>Library</h2>\r\n            <div className=\"library-songs\">\r\n                {songs.map(song => (\r\n                    <LibrarySong\r\n                        songs={songs}\r\n                        currentSong={currentSong}\r\n                        setCurrentSong={setCurrentSong}\r\n                        song={song}\r\n                        key={song.id}\r\n                        audioRef={audioRef}\r\n                        isPlaying={isPlaying}\r\n                        setSongs={setSongs}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Library\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faMusic } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Nav = ({libraryStatus, setLibraryStatus}) => {\r\n\r\n    return (\r\n        <nav>\r\n            <h1 className = \"title\">Chill-Hop</h1>\r\n            <button onClick={()=> setLibraryStatus(!libraryStatus)}>\r\n                Library <FontAwesomeIcon icon={faMusic} />\r\n            </button>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nfunction chillHop() {\r\n  return [\r\n    {\r\n      name: \"Keep Going\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Silience\",\r\n      artist: \"Toonorth\",\r\n      cover: \"https://chillhop.com/wp-content/uploads/2020/08/7ba352cafecae63aa3f09a52e125ea615d2c1f9b-1024x1024.jpg\",\r\n      id: uuidv4(),\r\n      active: false,\r\n      color: [\"#875639\", \"#AA6745\"],\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=8425\",\r\n    },\r\n    {\r\n      name: \"Daylight\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Going Back\",\r\n      artist: \"Swørn\",\r\n      cover: \"https://chillhop.com/wp-content/uploads/2020/10/737bb830d34592344eb4a2a1d2c006cdbfc811d9-1024x1024.jpg\",\r\n      id: uuidv4(),\r\n      active: false,\r\n      color: [\"#345281\", \"#414149\"],\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10310\",\r\n    },\r\n    {\r\n      name: \"Woods\",\r\n      artist: \"Miscél\",\r\n      cover: \"https://chillhop.com/wp-content/uploads/2020/07/00c8a4345165a8caf49d821209e29d89296f6d6a-1024x1024.jpg\",\r\n      id: uuidv4(),\r\n      active: false,\r\n      color: [\"#E43055\", \"#00626B\"],\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=7958\",\r\n    },\r\n    {\r\n      name: \"Zenith\",\r\n      artist: \"Leavv\",\r\n      cover: \"https://chillhop.com/wp-content/uploads/2020/09/88e7eb711f8c71d87fc102e97cf91e36f692348d-1024x1024.jpg\",\r\n      id: uuidv4(),\r\n      active: false,\r\n      color: [\"#D6E6A7\", \"#235550\"],\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9927\",\r\n    },\r\n    {\r\n      name: \"Smooth Wit' Any Groove\",\r\n      artist: \"FloFilz, Psalm Trees\",\r\n      cover: \"https://chillhop.com/wp-content/uploads/2020/07/51f4a0080f1d633d556c97324b985fd87a645293-1024x1024.jpg\",\r\n      id: uuidv4(),\r\n      active: false,\r\n      color: [\"#67A97B\", \"#532945\"],\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=8637\",\r\n    },\r\n    {\r\n      name: \"Beaver Creek\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Yesterdays\",\r\n      artist: \"xander.\",\r\n      cover: \"https://chillhop.com/wp-content/uploads/2020/10/0e5bb63f838ff92eeac142aae944e9f678df13c9-1024x1024.jpg\",\r\n      id: uuidv4(),\r\n      active: false,\r\n      color: [\"#6E5984\", \"#E2C6D4\"],\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10333\"\r\n    },\r\n    {\r\n      name: \"Nightfall\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Reflection\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Under the City Stars\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    }\r\n\r\n  ];\r\n}\r\n\r\nexport default chillHop;","import React, { useState, useRef } from 'react'\nimport './styles/app.scss'\nimport Song from './components/Song'\nimport PlayerControls from './components/PlayerControls'\nimport Library from './components/Library'\nimport Nav from './components/Nav'\nimport data from './data'\n\n\nfunction App() {\n\n  const audioRef = useRef(null)\n\n  const [songs, setSongs] = useState(data);\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: null,\n    duration: null\n  }\n  );\n  const [libraryStatus, setLibraryStatus] = useState(false); \n  const [shuffleState, setShuffleState] = useState(false);\n  const [loopState, setLoopState]  = useState(false); \n  \n\n  //Update song time as it plays \n  const handleTimeUpdate = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    setSongInfo({ ...songInfo, currentTime: current, duration })\n  }\n\n  //Auto skip to next song when song ends OR random song if shuffle btn selected\n  const handleSongEnd = async() => {\n    if(shuffleState===false) {\n      const currentIndex = songs.findIndex(song => song.id === currentSong.id)\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length] )\n    }\n  \n    if(shuffleState===true) {\n      await setCurrentSong(songs[Math.floor(Math.random() * songs.length)])\n \n     }\n     if(loopState===true) {\n      const currentIndex = songs.findIndex(song => song.id === currentSong.id)\n      await setCurrentSong(songs[currentIndex])\n     }\n      \n    //play the next song if previous song was playing\n    if(isPlaying) audioRef.current.play(); \n  }\n\n  return (\n    <div className={`App ${libraryStatus ? \"library-active\" : \"\"}`}>\n      <Nav \n      libraryStatus={libraryStatus} \n      setLibraryStatus={setLibraryStatus} \n      /> \n      <Song \n      currentSong={currentSong}\n      songInfo={songInfo}\n      isPlaying={isPlaying}\n       />\n      <PlayerControls \n      songs={songs} \n      songInfo={songInfo} \n      setSongInfo={setSongInfo} \n      audioRef={audioRef} \n      currentSong={currentSong} \n      setCurrentSong={currentSong} \n      songs={songs} \n      isPlaying={isPlaying} \n      setIsPlaying={setIsPlaying} \n      setCurrentSong={setCurrentSong}\n      shuffleState= {shuffleState}\n      setShuffleState={setShuffleState}\n      loopState={loopState}\n      setLoopState={setLoopState}\n      />\n      <Library \n      audioRef={audioRef} \n      songs={songs} \n      setSongs={setSongs} \n      currentSong={currentSong} \n      setCurrentSong={setCurrentSong} \n      isPlaying={isPlaying} \n      libraryStatus={libraryStatus}\n      />\n\n      <audio\n        onTimeUpdate={handleTimeUpdate}\n        //have song time loaded on load instead of when clicking play\n        onLoadedMetadata={handleTimeUpdate}\n        src={currentSong.audio}\n        ref={audioRef}\n        onEnded={handleSongEnd}\n        >\n      </audio>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}